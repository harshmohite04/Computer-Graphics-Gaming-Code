#include <stdio.h>
#include <graphics.h>
#include <conio.h>
#include <stdlib.h>

void scanline() {
    // This function is currently empty but can be used to structure the scanline algorithm separately.
}

int main() {
    int gd = DETECT, gm;
    initgraph(&gd, &gm, "");

    int n, i, j = 0, k, dy, dx;
    int x, y, temp;
    int a[20][2], xi[20];
    float slope[20];

    // Draw a polygon 
    printf("Enter the number of coordinates: ");
    scanf("%d", &n);

    printf("Enter the coordinates of the polygon:\n");
    for(i = 0; i < n; i++) {
        printf("Coordinate %d: ", i + 1);
        scanf("%d %d", &a[i][0], &a[i][1]);
    }

    // Close the polygon
    a[n][0] = a[0][0];
    a[n][1] = a[0][1];

    // Draw the polygon
    for(i = 0; i < n; i++) {
        line(a[i][0], a[i][1], a[i + 1][0], a[i + 1][1]);
    }

    getch();

    // Implement the scanline algorithm
    for(i = 0; i < n; i++) {
        dy = a[i + 1][1] - a[i][1];
        dx = a[i + 1][0] - a[i][0];
        if(dy == 0) {
            slope[i] = 1.0;
        } else if(dx == 0) {
            slope[i] = 0.0;
        } else {
            slope[i] = (float) dx / dy;
        }
    }

    for(y = 0; y < 480; y++) {
        k = 0;
        for(i = 0; i < n; i++) {
            if((a[i][1] > y && a[i + 1][1] <= y) || (a[i][1] <= y && a[i + 1][1] > y)) {
                xi[k] = (int) (a[i][0] + slope[i] * (y - a[i][1]));
                k++;
            }
        }

        // Sort the x-intersections
        for(j = 0; j < k - 1; j++) {
            for(i = 0; i < k - 1; i++) {
                if(xi[i] > xi[i + 1]) {
                    temp = xi[i];
                    xi[i] = xi[i + 1];
                    xi[i + 1] = temp;
                }
            }
        }

        // Fill the pixels between pairs of intersections
        setcolor(1);
        for(i = 0; i < k; i += 2) {
            line(xi[i], y, xi[i + 1], y);
            getch();
        }
    }

    getch();
    closegraph();
    return 0;
}
